{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/operation.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Loader/Loader.js","components/ContactList/EditContactForm.js/EditContactForm.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","views/HomePage.js"],"names":["module","exports","fetchContacts","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","message","addContacts","contact","addContactsRequest","post","addContactsSuccess","addContactsError","deleteContacts","contactId","deleteContactsRequest","delete","deleteContactsSuccess","deleteContactsError","editContacts","value","editContactsRequest","id","patch","editContactsSuccess","editContactsError","getContacts","state","contacts","items","filterContact","filter","filteredContacts","createSelector","name","toLowerCase","includes","toLocaleLowerCase","getLoading","loader","ContactForm","number","handleContactInfo","e","currentTarget","setState","reset","submitForm","preventDefault","newContact","props","some","el","alert","addContact","this","className","s","header","container","form","onSubmit","htmlFor","label","placeholder","formInput","onChange","pattern","title","required","type","Button","addButton","variant","Component","mapDispatchToProps","operation","editCont","connect","Filter","handleFilter","filterAct","filterTitle","filterConteiner","filterLabel","filterInput","filterContacts","Spinner","color","height","width","timeout","EditContactForm","editReset","contaktListButton","ContactList","editform","idContact","onClickDelete","deleteCont","onClickEdit","fetchCont","filteredCont","isLoading","contaktList","map","contaktListItem","contaktListName","buttonContainer","onClick","propTypes","filteredNames","PropTypes","array","deleteItem","func","obj","Homepage"],"mappings":"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","file":"static/js/5.d06a1f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaktList\":\"ContactList_contaktList__1Z4C5\",\"contaktListItem\":\"ContactList_contaktListItem__3HRIs\",\"contaktListButton\":\"ContactList_contaktListButton__3dzkx\",\"contaktListName\":\"ContactList_contaktListName__1y1WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2WvKA\",\"form\":\"ContactForm_form__jfyVy\",\"formInput\":\"ContactForm_formInput__3Dq1Y\",\"label\":\"ContactForm_label__ZnhfW\",\"addButton\":\"ContactForm_addButton__Mtq0a\",\"header\":\"ContactForm_header__1BXry\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__32CNG\",\"filterLabel\":\"Filter_filterLabel__9Brtn\",\"filterTitle\":\"Filter_filterTitle__KMH9g\",\"filterConteiner\":\"Filter_filterConteiner__2U86C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__3U9Ni\",\"loader\":\"Loader_loader__1-QlW\"};","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  editContactsRequest,\r\n  editContactsSuccess,\r\n  editContactsError,\r\n} from \"./actions/userActions.js\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContacts = (contact) => async (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContacts = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst editContacts = (value) => async (dispatch) => {\r\n  dispatch(editContactsRequest());\r\n  const { id } = value;\r\n  delete value.id;\r\n  try {\r\n    const { data } = await axios.patch(`/contacts/${id}`, value);\r\n    dispatch(editContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(editContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n  editContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\nexport const filterContact = (state) => {\r\n  return state.contacts.filter;\r\n};\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, filterContact],\r\n  (items, filter) =>\r\n    items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLocaleLowerCase())\r\n    )\r\n);\r\n\r\nexport const getLoading = (state) => state.contacts.loader;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport operation from \"../../redux/contacts/operation\";\r\nimport { getContacts } from \"../../redux/contacts/selectors\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleContactInfo = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const newContact = { name, number };\r\n\r\n    if (\r\n      this.props.contacts.some(\r\n        (el) => el.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.addContact(newContact);\r\n     \r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n      <h1 className={s.header}>Phonebook</h1>\r\n      <div className={s.container}>\r\n        \r\n      <form className={s.form} onSubmit={this.submitForm}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            placeholder=\"Ivan Ivanov\"\r\n            className={s.formInput}\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            placeholder=\"09755555555\"\r\n            required\r\n            onChange={this.handleContactInfo}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            htmlFor=\"number\"\r\n            className={s.formInput}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n          />\r\n        </label>\r\n        <Button className={s.addButton} variant=\"primary\" type=\"submit\">Add contact</Button>\r\n      </form>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  addContact: operation.addContacts,\r\n  editCont:operation.editContacts\r\n\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterContacts } from \"../../redux/contacts/actions/userActions\";\r\nimport { filterContact} from '../../redux/contacts/selectors'\r\n\r\nclass Filter extends Component {\r\n  handleFilter = (e) => {\r\n    this.props.filterAct(e.currentTarget.value);\r\n  };\r\n\r\n  render() {\r\n    return ( \r\n      <>\r\n    <h2 className={s.filterTitle}>Contacts</h2>\r\n      <div className={s.filterConteiner}>\r\n     \r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          name=\"filter\"\r\n          value={this.props.filter}\r\n          onChange={this.handleFilter}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n  filter: filterContact(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  filterAct: filterContacts,\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  search: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './Loader.module.css'\r\n\r\n\r\n class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n        <div className={s.container}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n        className={s.loader}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Spinner","import { LensTwoTone } from '@material-ui/icons';\r\nimport React, {Component} from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport operation from \"../../../redux/contacts/operation\";\r\nimport s from \"../ContactList.module.css\"\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nclass EditContactForm extends Component {\r\n    state = {\r\n        name: this.props.name,\r\n        number:this.props.number,\r\n      };\r\n      handleContactInfo = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n     \r\n    \r\n      submitForm = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const{id}=this.props;\r\n        const newContact = {id, name, number};\r\n         let updatedCont=this.props.editCont( newContact, id);\r\n    \r\n         this.props.editReset(id)\r\n      }\r\n\r\n    \r\n      render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n          <form className={s.form} onSubmit={this.submitForm}>\r\n            <label htmlFor=\"name\" className={s.label}>\r\n              Name\r\n              <input\r\n                placeholder=\"Ivan Ivanov\"\r\n                className={s.formInput}\r\n                onChange={this.handleContactInfo}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                name=\"name\"\r\n                value={name}\r\n                type=\"text\"\r\n              />\r\n            </label>\r\n            <label className={s.label}>\r\n              Number\r\n              <input\r\n                placeholder=\"09755555555\"\r\n                required\r\n                onChange={this.handleContactInfo}\r\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                required\r\n                value={number}\r\n                htmlFor=\"number\"\r\n                className={s.formInput}\r\n                name=\"number\"\r\n                type=\"tel\"\r\n              />\r\n            </label>\r\n            <button className={s.contaktListButton} type=\"submit\">\r\n            <EditIcon color=\"primary\"  />\r\n            </button>\r\n          </form>\r\n        );\r\n      }\r\n    }\r\n\r\n    const mapDispatchToProps={\r\n        editCont:operation.editContacts,\r\n        addContact: operation.addContacts\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n \r\nexport default  connect(null,mapDispatchToProps)(EditContactForm);\r\n","import React, { Component } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Spinner from \"../Loader/Loader\";\r\n\r\nimport EditContactForm from \"./EditContactForm.js/EditContactForm\";\r\n\r\nclass ContactList extends Component {\r\n  state = {\r\n    editform: false,\r\n    idContact: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchCont();\r\n  }\r\n  onClickDelete = (id) => {\r\n    this.props.deleteCont(id);\r\n  };\r\n  onClickEdit = (id) => {\r\n    this.setState({ editform: !this.state.editform, idContact: id });\r\n  };\r\n\r\n  render() {\r\n    const { filteredCont, isLoading } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {isLoading && <Spinner />}\r\n        {\r\n          <ul className={s.contaktList}>\r\n            {filteredCont.map(({ id, name, number }) => (\r\n              <li className={s.contaktListItem} key={id}>\r\n                <div>\r\n                  {this.state.editform && id === this.state.idContact ? (\r\n                    <EditContactForm\r\n                      id={id}\r\n                      name={name}\r\n                      number={number}\r\n                      editReset={this.onClickEdit}\r\n                    />\r\n                  ) : (\r\n                    <p className={s.contaktListName}>\r\n                      {name} : {number}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n                <div className={s.buttonContainer}>\r\n                  <button\r\n                    className={s.contaktListButton}\r\n                    type=\"button\"\r\n                    onClick={() => this.onClickDelete(id)}\r\n                  >\r\n                    <DeleteIcon color=\"primary\" />\r\n                  </button>\r\n                  <button\r\n                    className={s.contaktListButton}\r\n                    type=\"button\"\r\n                    onClick={() => this.onClickEdit(id)}\r\n                  >\r\n                    {!this.state.editform && <EditIcon color=\"primary\" />}\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport operation from \"../../redux/contacts/operation\";\r\nimport ContactList from \"./ContactList\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  filteredContacts,\r\n  \r\n  getLoading\r\n\r\n} from \"../../redux/contacts/selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filteredCont: filteredContacts(state),\r\n  isLoading:getLoading(state),\r\n  \r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteCont: (id) => dispatch(operation.deleteContacts(id)),\r\n  fetchCont: () => dispatch(operation.fetchContacts()),\r\n  editCont:(obj)=>dispatch(operation.editContacts(obj))\r\n});\r\nContactList.propTypes = {\r\n  filteredNames: PropTypes.array,\r\n  deleteItem: PropTypes.func,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, {Component} from 'react'\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Filter from \"../components/Filter\";\r\nimport ContactList from \"../components/ContactList\";\r\n\r\nclass Homepage extends Component {\r\n   \r\n    render() { \r\n        return ( <>\r\n            \r\n\r\n            <ContactForm />\r\n            <div>\r\n              \r\n              <Filter />\r\n              <ContactList />\r\n            </div>\r\n            </>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Homepage;"],"sourceRoot":""}